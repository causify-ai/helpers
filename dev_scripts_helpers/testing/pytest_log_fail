#!/bin/bash -e

# Default file name
DEFAULT_FILE="tmp.pytest_script.txt"


# Help function
usage() {
  echo "Usage: $0 [-f FILE]"
  echo
  echo "Options:"
  echo "  -f FILE   Specify the file name to use (default: $DEFAULT_FILE)"
  echo "  -h        Display this help message"
  exit 1
}

# Parse command-line arguments
FILE=$DEFAULT_FILE
while getopts ":f:h" opt; do
  case $opt in
    f)
      FILE="$OPTARG"
      ;;
    h)
      usage
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      usage
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      usage
      ;;
  esac
done

# Output the file name being used
echo "Using file: $FILE"

if [[ ! -f "$FILE" ]]; then
  echo "ERROR: File '$FILE' doesn't exist."
  exit 1
fi;

OUT_FILE="tmp.pytest_log_fail.txt"

# FAILED oms/broker/ccxt/test/test_ccxt_execution_quality.py::Test_compute_adj_fill_ecdfs::test3 - RuntimeError:
\grep -E "^FAILED|ERROR" $FILE | awk '{print $2}' 2>&1 >$OUT_FILE

# run_fast_tests  Run fast tests  2024-11-17T15:51:17.0988136Z ^[[31mFAILED^[[0m helpers/test/test_hdbg.py::^[[1mTest_dassert_issubclass1::test_man_fail1^[[0m - RuntimeError:
sed -E 's/\x1B\[[0-9;]*[a-zA-Z]//g' $FILE | \grep -E 'FAILED|ERROR' | awk '{print $6}' 2>&1 >$OUT_FILE

# helpers_root/helpers/test/test_hserver.py::Test_hserver1::test_gp1 (0.00 s) PASSED [ 36%]
\grep -E " FAILED|ERROR " $FILE | awk '{print $1}' 2>&1 >>$OUT_FILE

cat $OUT_FILE | sort | uniq
