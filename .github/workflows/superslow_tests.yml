name: Superslow tests
on:
  # Run manually.
  workflow_dispatch:
  schedule:
    # Run this everyday even if there are no commits.
    - cron:  '0 0 * * *'

env:
  CSFY_CI: true
jobs:
  run_superslow_tests:
    runs-on: ubuntu-latest

    steps:
      # Pass AWS credentials via GH secrets. This is needed to pull the Docker image
      # that will be used to run the action.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CSFY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CSFY_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.CSFY_AWS_DEFAULT_REGION }}

      # This is needed to pull the Docker image.
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Make everything accessible by any user to avoid permission errors.
      - name: Cleanup
        run: sudo chmod 777 -R .

      # Check out the code from GitHub so that we can run the action inside
      # the Docker container.
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}

      # To see the modules in `amp`, PYTHONPATH needs to include `amp` in the
      # same way we do in `setenv.sh`.
      - name: Update PYTHONPATH
        run: echo "PYTHONPATH=.:amp" >> $GITHUB_ENV

      # Install packages that are required to run the job via GH.
      - name: Install dependencies
        if: github.event.pull_request.draft == false
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/gh_requirements.txt

      # Pull the latest Docker image to run the regressions on.
      - name: Pull image
        if: github.event.pull_request.draft == false
        env:
          CSFY_ECR_BASE_PATH: ${{ vars.CSFY_ECR_BASE_PATH }}
        run: invoke docker_pull

      # Run the `invoke` target `run_superslow_tests` to run tests that are over 30 seconds.
      # See the corresponding documentation for more information.
      - name: Run superslow tests
        env:
          GH_ACTION_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          CSFY_AWS_ACCESS_KEY_ID: ${{ secrets.CSFY_AWS_ACCESS_KEY_ID }}
          CSFY_AWS_SECRET_ACCESS_KEY: ${{ secrets.CSFY_AWS_SECRET_ACCESS_KEY }}
          CSFY_AWS_DEFAULT_REGION: ${{ vars.CSFY_AWS_DEFAULT_REGION }}
          CSFY_ECR_BASE_PATH: ${{ vars.CSFY_ECR_BASE_PATH }}
          CSFY_AWS_S3_BUCKET: ${{ vars.CSFY_AWS_S3_BUCKET }}
          CSFY_TELEGRAM_TOKEN: ${{ secrets.CSFY_TELEGRAM_TOKEN }}
        run: invoke run_superslow_tests

      # In case of manual run, this workflow step will not be skipped and
      # info in the step will be in format as seen in `with` statement.
      # Blank with no info and skipped otherwise.
      - name: Post status if was triggered manually
        if: ${{ always() && github.event_name == 'workflow_dispatch' }}
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: "run_superslow_tests"
          description: 'Job is done (manual run)'
          state: ${{ job.status }}
          sha: ${{ github.sha }}
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      # Notify the team via Telegram in case of failure.
      - name: Send Telegram notification for failure
        # Need to use ref_name as it contains the branch that triggered the
        # workflow run.
        # Alternative, head_ref is only available when the event that triggers a
        # workflow run is either pull_request or pull_request_target.
        if: ${{ failure() && github.ref_name == 'master' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.CK_TG_BUILDBOT_CHATID }}
          token: ${{ secrets.CK_TG_BUILDBOT_TOKEN }}
          message: |
            ðŸ’£ SUPERSLOW TESTS FAILED
            Build failure '${{ github.workflow }}'
            Repo: '${{ github.repository }}'
            Branch: '${{ github.ref_name }}'
            Event: '${{ github.event_name }}'
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
