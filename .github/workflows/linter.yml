name: Check if the Linter was run
on:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
    branches:
      - master
  workflow_dispatch:

env:
  CSFY_CI: true

# Set up permissions for OIDC authentication.
permissions:
  # This is required for requesting the OIDC JWT.
  id-token: write
  # This is required for actions/checkout.
  contents: read
  # This is required for pulling the Docker image from GHCR.
  packages: read

jobs:

  Run_linter:
    # Do not run on draft pull requests or when the workflow is triggered manually.
    if: ${{ github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      # To optimize costs, the image is fetched from GHCR registry by default. If you prefer
      # pulling the image from ECR, enable this.
      # # Pass AWS credentials via GH secrets. This is needed to pull the Docker image
      # # that will be used to run the action.
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: ${{ vars.GH_ACTION_AWS_ROLE_ARN }}
      #     role-session-name: ${{ vars.GH_ACTION_AWS_SESSION_NAME }}
      #     aws-region: ${{ vars.CSFY_AWS_DEFAULT_REGION }}

      # # # This is needed to pull the Docker image.
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      - name: Perform GHCR registry login
        run: docker login ghcr.io -u gpsaggese -p ${{ secrets.GITHUB_TOKEN }}

      # Make everything accessible by any user to avoid permission errors.
      - name: Cleanup
        run: sudo chmod 777 -R .

      # Check out the code from GitHub so that we can run the action inside
      # the Docker container.
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # The `lint` invoke target needs to have the full history of commits
          # in order to compare the current branch with the master branch.
          # The `0` means unlimited depth.
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # Install packages that are required to run the job via GH.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/gh_requirements.txt

      # Pull the `helpers:prod` image to run the Linter on it.
      - name: Pull Linter image
        run: docker pull ghcr.io/causify-ai/helpers:prod

      # Run the linter, then check if any file was changed after that. If so,
      # fail the job.
      - name: Check if the Linter was run
        env:
          # Base path for ECR registry.
          # CSFY_ECR_BASE_PATH: ${{ vars.CSFY_ECR_BASE_PATH }}
          # If you prefer pulling the image from ECR, comment out the following line and uncomment the one above.
          # Base path for GHCR registry.
          # Although the env name has ECR but the value is set to GHCR registry.
          # This env variable is used inside invokes for fetching the image.
          # We are overriding ECR base path with GHCR base path in order to download image from GHCR.
          CSFY_ECR_BASE_PATH: ghcr.io/causify-ai
        # To run the linter, fetch the master branch for comparison with the
        # current branch.
        run: |
          invoke git_fetch_master
          invoke lint --branch
          invoke lint_check_if_it_was_run

      - name: Post status if was triggered manually
        if: ${{ always() && github.event_name == 'workflow_dispatch' }}
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: "Run_linter"
          description: 'Job is done (manual run)'
          state: ${{ job.status }}
          sha: ${{ github.sha }}
          target_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
