name: Dev Image Build and Test
on:
  # Run on every PR to master that is ready to review (i.e., not draft).
  pull_request:
    # https://github.community/t/dont-run-actions-on-draft-pull-requests/16817/19
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - master
  # Run weekly on Monday at 6 AM UTC.
  schedule:
    - cron: '0 6 * * 1'
  # Run manually.
  workflow_dispatch:
    inputs:
      reviewers:
        description: 'GitHub username to ask for reviewing the created PR.'
        required: false
        default: 'dremdem'
env:
  CSFY_CI: true
# Set up permissions for OIDC authentication.
permissions:
  # This is required for actions/checkout.
  contents: read
  # This is required for pulling the Docker image from GHCR.
  packages: read
jobs:
  periodic_dev_image_build_and_test:
    # We expect user to not execute manual run in a draft PR.
    # The reason is `github.event.pull_request.draft` is evaluated as empty
    # string and the condition is always true which is not the right state.
    runs-on: ubuntu-latest

    steps:
      # Pass AWS credentials via GH secrets. This is needed to pull the Docker image
      # that will be used to run the action.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CSFY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CSFY_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.CSFY_AWS_DEFAULT_REGION }}

      # # To optimize costs, the image is fetched from GHCR registry by default.
      # # If you prefer pulling the image from ECR, enable this.
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # This is needed to pull the Docker image.
      - name: Login to GHCR
        run: docker login ghcr.io -u gpsaggese -p ${{ secrets.GH_ACTION_ACCESS_TOKEN }}

      # Make everything accessible by any user to avoid permission errors.
      - name: Cleanup
        run: sudo chmod 777 -R .

      # Check out the code from GitHub so that we can run the action inside
      # the Docker container.
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # For PRs: checkout the PR branch (head_ref).
          # For other events: checkout master.
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || 'master' }}
          submodules: true
          # TODO(Samarth): Do we need to propagate this to other `repos/workflow`
          # make it a default behavior? For certain tests to pass, we need entire
          # commit history of the repo including sub-modules.
          fetch-depth: 0
          token: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}

          # Configure git for commits.
      - name: Configure git
        run: git config --global user.name 'CK Bot'

      # To see the modules in `helpers_root`, PYTHONPATH needs to include
      # `helpers_root` in the same way we do in `setenv.sh`.
      # TODO(Grisha): re-use the approach from `dev_scripts_cmamp/thin_client/setenv.sh`.
      - name: Update PYTHONPATH
        run: echo "PYTHONPATH=.:helpers_root" >> $GITHUB_ENV

      # Install packages that are required to run the job via GH.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/gh_requirements.txt

      # Pull the latest Docker image to run the regressions on.
      # - name: Pull image from AWS ECR
      #   env:
      #     CSFY_ECR_BASE_PATH: ${{ vars.CSFY_ECR_BASE_PATH }}
      #   run: invoke docker_pull

      # Pull the latest Docker image from the GHCR registry instead of ECR for
      # cost saving purposes to run the regressions on.
      - name: Pull image from GHCR
        run: docker pull ghcr.io/${{ github.repository }}:dev

      # Setup GitHub CLI authentication for creating issues and PRs.
      - name: Setup GitHub CLI
        run: |
          echo "${{ secrets.GH_ACTION_ACCESS_TOKEN }}" | gh auth login --with-token

      # Run the periodic dev image release workflow.
      - name: Run 'docker_build_test_dev_image' workflow
        env:
          CSFY_AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          CSFY_AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          CSFY_AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          CSFY_AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          # CSFY_ECR_BASE_PATH: ${{ vars.CSFY_ECR_BASE_PATH }}
          # CSFY_ECR_BASE_PATH is the source path for fetching the image.
          # If you prefer pulling the image from ECR, comment out the following
          # line and uncomment the one above.
          # TODO(Vlad): Rename the variable to CSFY_CR_BASE_PATH since it can be
          # either GHCR or ECR.
          CSFY_ECR_BASE_PATH: ghcr.io/${{ github.repository_owner }}
          CSFY_AWS_S3_BUCKET: ${{ vars.CSFY_AWS_S3_BUCKET }}
          GH_ACTION_ACCESS_TOKEN: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
        run: |
          ASSIGNEE="${{ github.event.inputs.reviewers || 'dremdem' }}"
          invoke docker_build_test_dev_image --reviewers="$ASSIGNEE"
