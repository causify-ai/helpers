name: Test coverage

on:
  push:
    branches:
      - HelpersTask487_Add_Git_actions_for_Codecov_3
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 * * 1'

env:
  CSFY_CI: true

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  run_test_coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.GH_ACTION_AWS_ROLE_ARN }}
          role-session-name: ${{ vars.GH_ACTION_AWS_SESSION_NAME }}
          aws-region: ${{ vars.CSFY_AWS_DEFAULT_REGION }}

      - name: Login to GHCR
        run: docker login ghcr.io -u gpsaggese -p ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        run: sudo chmod 777 -R .

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PYTHONPATH
        run: echo "PYTHONPATH=.:helpers" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/gh_requirements.txt

      - name: Pull image from GHCR
        run: docker pull ghcr.io/${{ github.repository }}:dev

      - name: Run tests and generate separate and combined coverage XML inside Docker
        env:
          GH_ACTION_ACCESS_TOKEN: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
          CSFY_AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          CSFY_AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          CSFY_AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          CSFY_AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          CSFY_ECR_BASE_PATH: ghcr.io/${{ github.repository_owner }}
          CSFY_AWS_S3_BUCKET: ${{ vars.CSFY_AWS_S3_BUCKET }}
        run: invoke run_fast_coverage .

      - name: Rename Fast Test Coverage report
        if: always()
        run: mv ./coverage.xml ./coverage_fast.xml

      - name: Upload Fast Test Coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage_fast.xml
          flags: fast
          name: fast-test-coverage
          fail_ci_if_error: true

      # - name: Upload Slow Test Coverage to Codecov
      #   if: always()
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./coverage_slow.xml
      #     flags: slow
      #     name: slow-test-coverage
      #     fail_ci_if_error: true

      # - name: Upload Combined Test Coverage to Codecov
      #   if: always()
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./coverage.xml
      #     flags: combined
      #     name: combined-test-coverage
      #     fail_ci_if_error: true
