name: Test coverage

on:
  pull_request:
  workflow_dispatch: {}
  # every day at 00:00 UTC.
  schedule:
    - cron: '0 0 * * *'

env:
  CSFY_CI: true

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  run_test_coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.GH_ACTION_AWS_ROLE_ARN }}
          role-session-name: ${{ vars.GH_ACTION_AWS_SESSION_NAME }}
          aws-region: ${{ vars.CSFY_AWS_DEFAULT_REGION }}

      - name: Login to GHCR
        run: docker login ghcr.io -u gpsaggese -p ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        run: sudo chmod 777 -R .

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PYTHONPATH
        run: echo "PYTHONPATH=.:helpers" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/gh_requirements.txt

      - name: Pull image from GHCR
        run: docker pull ghcr.io/${{ github.repository }}:dev

      # Only on scheduled runs, capture ISO weekday (1=Mon â€¦ 7=Sun).
      - name: Set DAY_OF_WEEK
        if: github.event_name == 'schedule'
        run: echo "DAY_OF_WEEK=$(date -u +'%u')" >> $GITHUB_ENV

      # This step is used to trigger the fast test coverage generation using the invoke task.
      - name: Run Fast test and generate report
        env:
          GH_ACTION_ACCESS_TOKEN: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
          CSFY_AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          CSFY_AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          CSFY_AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          CSFY_AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          CSFY_ECR_BASE_PATH: ghcr.io/${{ github.repository_owner }}
          CSFY_AWS_S3_BUCKET: ${{ vars.CSFY_AWS_S3_BUCKET }}
        run: invoke run_coverage --suite fast -- .

      - name: Upload Fast Test Coverage to Codecov
        # `if: always()` ensures this step runs regardless of prior failures.
        # It is used here to always attempt uploading the coverage report,
        # even if earlier steps have failed.
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: fast
          name: fast-test-coverage
          # Combined coverage for tests will be checked rather than individual.
          fail_ci: false
          # `fail_ci_if_error: true` instructs the action to mark the CI as failed
          # if there is any error during the upload to Codecov.
          fail_ci_if_error: true

      - name: Run Slow test and generate report
        env:
          GH_ACTION_ACCESS_TOKEN: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
          CSFY_AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          CSFY_AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          CSFY_AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          CSFY_AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          CSFY_ECR_BASE_PATH: ghcr.io/${{ github.repository_owner }}
          CSFY_AWS_S3_BUCKET: ${{ vars.CSFY_AWS_S3_BUCKET }}
        run: invoke run_coverage --suite slow -- .

      - name: Upload Slow Test Coverage to Codecov
        # "if: always()" ensures this step is executed regardless of previous outcomes.
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: slow
          name: slow-test-coverage
          fail_ci: false
          # "fail_ci_if_error: true" causes the job to fail if the upload to Codecov fails,
          # helping to catch issues with the coverage reporting.
          fail_ci_if_error: true

      - name: Run Superslow test and generate report
        id: run_superslow
        # Scheduled for Monday (i.e Day 1) or when manually triggered.
        if: (github.event_name == 'schedule' && env.DAY_OF_WEEK == '1') || github.event_name == 'workflow_dispatch'
        env:
          GH_ACTION_ACCESS_TOKEN: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
          CSFY_AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          CSFY_AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          CSFY_AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
          CSFY_AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          CSFY_ECR_BASE_PATH: ghcr.io/${{ github.repository_owner }}
          CSFY_AWS_S3_BUCKET: ${{ vars.CSFY_AWS_S3_BUCKET }}
        run: invoke run_coverage --suite superslow -- .

      - name: Upload Superslow Test Coverage to Codecov
        #TODO(Shaunak): Consider removing it when we turn this workflow into a reusable one.
        if: steps.run_superslow.outcome == 'success'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: superslow
          name: superslow-test-coverage
          fail_ci: true
          fail_ci_if_error: true
