# linter log
[0mHH:MM:SS - [36mINFO [0m hdbg.py init_logger:{LINE_NUM}                               > cmd='linters/base.py --files $GIT_ROOT/linters/test/outcomes/Test_linter_py1.test_linter_ipynb1/tmp.scratch/input.ipynb'
HH:MM:SS - [36mINFO [0m base.py _run_linter:{LINE_NUM}            Using num_threads='serial' since there is only one file to lint
HH:MM:SS - [36mINFO [0m base.py _lint:{LINE_NUM}
Linting file: '$GIT_ROOT/linters/test/outcomes/Test_linter_py1.test_linter_ipynb1/tmp.scratch/input.ipynb'
////////////////////////////////////////////////////////////////////////////////
linter_warnings.txt
////////////////////////////////////////////////////////////////////////////////
file_paths=1 ['$GIT_ROOT/linters/test/outcomes/Test_linter_py1.test_linter_ipynb1/tmp.scratch/input.ipynb']
actions=21 ['add_python_init_files', 'add_toc_to_notebook', 'fix_md_links', 'lint_md', 'autoflake', 'fix_whitespaces', 'doc_formatter', 'isort', 'class_method_order', 'normalize_imports', 'format_separating_line', 'add_class_frames', 'black', 'process_jupytext', 'check_filename', 'check_merge_conflict', 'check_import', 'warn_incorrectly_formatted_todo', 'flake8', 'pylint', 'mypy']
////////////////////////////////////////////////////////////////////////////////
[0mHH:MM:SS - [36mINFO [0m hdbg.py init_logger:{LINE_NUM}                               > cmd='dev_scripts_helpers/notebooks/add_toc_to_notebook.py --input_files $GIT_ROOT/linters/test/outcomes/Test_linter_py1.test_linter_ipynb1/tmp.scratch/input.ipynb' [add_toc_to_notebook]
$GIT_ROOT/linters/test/outcomes/Test_linter_py1.test_linter_ipynb1/tmp.scratch/input.ipynb:1: All notebook filenames start with `Master_` or match: `\S+Task\d+_...` [check_filename]
$GIT_ROOT/linters/test/outcomes/Test_linter_py1.test_linter_ipynb1/tmp.scratch/input.ipynb:1: each notebook should be under a 'notebooks' directory to not confuse pytest [check_filename]

////////////////////////////////////////////////////////////////////////////////

# linter file
{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "CONTENTS:\n",
                "- [Imports](#imports)"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "<a name='imports'></a>\n",
                "# Imports"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "import pandas as pd\n",
                "import re\n",
                "\n",
                "# TODO: Fix.\n",
                "res = re.findall(r\"[a-z]+\", \"some text\")\n",
                "\n",
                "\n"
            ]
        }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3 (ipykernel)",
            "language": "python",
            "name": "python3"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 5
}
